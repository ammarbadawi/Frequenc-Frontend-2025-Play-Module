version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - JWT_SECRET=your-super-secret-jwt-key
      - STRIPE_SECRET_KEY=sk_test_your_stripe_key
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - JWT_SECRET=your-super-secret-jwt-key
      - JWT_EXPIRES_IN=7d
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=your-email@gmail.com
      - EMAIL_PASS=your-email-password
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Users Service
  users-service:
    build:
      context: .
      dockerfile: apps/users-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - AWS_ACCESS_KEY_ID=your-aws-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=frequenc-uploads
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Venues Service
  venues-service:
    build:
      context: .
      dockerfile: apps/venues-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - AWS_ACCESS_KEY_ID=your-aws-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=frequenc-venues
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Bookings Service
  bookings-service:
    build:
      context: .
      dockerfile: apps/bookings-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Games Service
  games-service:
    build:
      context: .
      dockerfile: apps/games-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Payments Service
  payments-service:
    build:
      context: .
      dockerfile: apps/payments-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - STRIPE_SECRET_KEY=sk_test_your_stripe_key
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Notifications Service
  notifications-service:
    build:
      context: .
      dockerfile: apps/notifications-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=your-email@gmail.com
      - EMAIL_PASS=your-email-password
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # Marketplace Service
  marketplace-service:
    build:
      context: .
      dockerfile: apps/marketplace-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/frequenc
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - AWS_ACCESS_KEY_ID=your-aws-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=frequenc-marketplace
    depends_on:
      - mongo
      - redis
      - nats
    networks:
      - frequenc-network

  # MongoDB Database
  mongo:
    image: mongo:7.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=frequenc
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - frequenc-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - frequenc-network

  # NATS Message Broker
  nats:
    image: nats:2.9-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - frequenc-network

  # WebSocket Gateway
  websocket-gateway:
    build:
      context: .
      dockerfile: apps/websocket-gateway/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      - redis
      - nats
    networks:
      - frequenc-network

volumes:
  mongo_data:
  redis_data:

networks:
  frequenc-network:
    driver: bridge 